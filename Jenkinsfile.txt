pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/autotestMTG21/auto21.git'
            }
        }
        stage('Build') {
            steps {
                sh "mvn compile"
            }
        }
        stage('Test') {
            steps {
                sh "mvn test"
            }
            post {
                always {
                    junit '**/TEST*.xml'
                }
            }
        }
         stage('newman') {
            steps {
                sh  'newman run Labb_Postman.postman_collection.json --environment Labb_Postman_Enviroment.postman_environment.json --reporters junit'
            }
            post {
                always {
                        junit '**/*xml'
                 }
             }
        }

      stage('Codechecking') {
          steps {
                echo "starting codeAnalyze with SonarQube......"
                withSonarQubeEnv('SonarQube Server') {
                 sh "mvn -f pom.xml clean compile sonar:sonar "
                }
                script {
                timeout(10) { 
                        def qg = waitForQualityGate() 
                                if (qg.status != 'OK') {
                                        error "Not pass Sonarqube codechecking! failure: ${qg.status}"
                                }
                         }
                }
          }
       }
        stage('Robot Framework System tests with Selenium') {
            steps {
                sh ' robot --variable BROWSER:headlesschrome -d Results Tests'
            }
            post {
                always {
                    script {
                          step(
                                [
                                  $class              : 'RobotPublisher',
                                  outputPath          : 'results',
                                  outputFileName      : '**/output.xml',
                                  reportFileName      : '**/report.html',
                                  logFileName         : '**/log.html',
                                  disableArchiveOutput: false,
                                  passThreshold       : 50,
                                  unstableThreshold   : 40,
                                  otherFiles          : "**/*.png,**/*.jpg",
                                ]
                          )
                    }
                }
            }
        }
       
    }
}